USE FTC_DATAMART
GO

IF (NOT EXISTS (SELECT * 
                 FROM FTC_DATAMART.INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_NAME = 'BI_EVASAO'))
BEGIN

--DROP TABLE FTC_DATAMART..BI_EVASAO

CREATE TABLE FTC_DATAMART..BI_EVASAO
(
	COD_UNIDADE_FISICA T_CODIGO,
	NOME_UNIDADE_FISICA T_ALFALARGE,
	TIPO_CURSO T_CODIGO,
	COD_CURSO T_CODIGO,
	NOME_CURSO T_ALFALARGE,
	CURRICULO T_CODIGO,
	TURNO T_CODIGO,
	TIPO_INGRESSO T_CODIGO,
	ANO_INGRESSO T_ANO,
	SEM_INGRESSO T_SEMESTRE,
	SITUACAO_ALUNO T_CODIGO,
	ALUNO T_CODIGO,
	NOME_ALUNO T_ALFALARGE,
	DT_ENCERRAMENTO T_DATA,
	ANO_ENCERRAMENTO T_ANO,
	SEM_ENCERRAMENTO T_SEMESTRE,
	MOTIVO_ENCERRAMENTO T_CODIGO,
	CAUSA_ENCERRAMENTO T_CODIGO	,
	PERIODO_ENCERRAMENTO VARCHAR(6)
)

END
ELSE 
	DELETE FROM FTC_DATAMART..BI_EVASAO
GO

INSERT INTO FTC_DATAMART..BI_EVASAO 
SELECT  UF.UNIDADE_FIS AS COD_UNIDADE_FISICA, 
		UF.NOME_COMP AS NOME_UNIDADE_FISICA, 
		C.TIPO AS TIPO_CURSO, 
		C.CURSO AS COD_CURSO, 
		C.NOME AS NOME_CURSO, 
		A.CURRICULO, 
		A.TURNO,
		A.TIPO_INGRESSO, 
		A.ANO_INGRESSO, 
		A.SEM_INGRESSO,
		A.SIT_ALUNO AS SITUACAO_ALUNO,
		A.ALUNO, 
		A.NOME_COMPL AS NOME_ALUNO, 
		HCC.DT_ENCERRAMENTO, 
		HCC.ANO_ENCERRAMENTO, 
		HCC.SEM_ENCERRAMENTO,
		HCC.MOTIVO AS MOTIVO_ENCERRAMENTO,
		HCC.CAUSA_ENCERR AS CAUSA_ENCERRAMENTO,
		'1900/1' AS PERIODO_ENCERRAMENTO
FROM LY_ALUNO A
JOIN LY_H_CURSOS_CONCL HCC ON HCC.ALUNO = A.ALUNO
JOIN LY_CURSO C ON C.CURSO = A.CURSO
JOIN LY_UNIDADE_FISICA UF ON UF.UNIDADE_FIS = A.UNIDADE_FISICA
WHERE 1=1
AND A.SIT_ALUNO IN ('Evadido','Cancelado') AND HCC.DT_REABERTURA IS NULL
GO

-- ## SANEAMENTO DE CASOS ANÔMALOS ## --

--1. DATA ENCERRAMENTO 1900
--1.1 CASOS QUE POSSUI ANO E SEMESTRE ENCERRAMENTO COLOCAR ULTIMA DATA DO PERIODO CORRESPONDENTE
UPDATE E 
	SET E.DT_ENCERRAMENTO = CONCAT(E.ANO_ENCERRAMENTO,'-',CASE WHEN E.SEM_ENCERRAMENTO = 1 THEN '06' ELSE '12' END,'-','30')
FROM FTC_DATAMART..BI_EVASAO E
WHERE E.DT_ENCERRAMENTO = '1900-01-01' AND E.ANO_ENCERRAMENTO <> 1900
GO

--1.2 CASOS QUE NAO POSSUI ANO E SEMESTRE DE ENCERRAMENTO MAS POSSUI HISTORICO DEVEM TER INSERIDO O ULTIMO PERIODO ESTUDADO PELO ALUNO
SELECT	MAX(CONCAT(HM.ANO,HM.SEMESTRE)) AS PERIODO_ENCERRAMENTO, 
		E.ALUNO, 
		NULL AS ANO_ENCERRAMENTO, 
		NULL AS SEM_ENCERRAMENTO
INTO #TEMP_PERIODO_ENCERRAMENTO --DROP TABLE #TEMP_PERIODO_ENCERRAMENTO
FROM FTC_DATAMART..BI_EVASAO E 
JOIN LY_HISTMATRICULA HM ON HM.ALUNO = E.ALUNO
WHERE E.DT_ENCERRAMENTO = '1900-01-01'  OR E.ANO_ENCERRAMENTO = 1900
GROUP BY E.ALUNO
ORDER BY E.ALUNO
GO

UPDATE	#TEMP_PERIODO_ENCERRAMENTO 
	SET	ANO_ENCERRAMENTO = SUBSTRING(PERIODO_ENCERRAMENTO,1,4), 
		SEM_ENCERRAMENTO = SUBSTRING(PERIODO_ENCERRAMENTO,5,2)
GO

-- CASO DE ENCERRAMENTO EM PERIODO DE FERIAS ALTERAR PARA PERIODO REGULAR
UPDATE	#TEMP_PERIODO_ENCERRAMENTO
	SET SEM_ENCERRAMENTO = '1' 
WHERE SEM_ENCERRAMENTO = '11'
GO

UPDATE	#TEMP_PERIODO_ENCERRAMENTO 
	SET SEM_ENCERRAMENTO = '2' 
WHERE SEM_ENCERRAMENTO = '22'
GO

UPDATE	E 
	SET E.DT_ENCERRAMENTO = CONCAT(T.ANO_ENCERRAMENTO,'-',CASE WHEN T.SEM_ENCERRAMENTO = 1 THEN '06' ELSE '12' END,'-','30'), 
		E.ANO_ENCERRAMENTO = T.ANO_ENCERRAMENTO,
		E.SEM_ENCERRAMENTO =  T.SEM_ENCERRAMENTO
FROM FTC_DATAMART..BI_EVASAO E
JOIN #TEMP_PERIODO_ENCERRAMENTO T ON T.ALUNO = E.ALUNO
WHERE E.DT_ENCERRAMENTO = '1900-01-01'  OR E.ANO_ENCERRAMENTO = 1900
GO

--1.3 CASOS QUE NAO POSSUI ANO E SEMESTRE DE ENCERRAMENTO E NÃO POSSUI HISTORICO COLOCAR O ANO E SEMESTRE DE INGRESSO

UPDATE	E 
	SET E.DT_ENCERRAMENTO = CONCAT(E.ANO_INGRESSO,'-',CASE WHEN E.SEM_INGRESSO = 1 THEN '06' ELSE '12' END,'-','30'), 
		E.ANO_ENCERRAMENTO = E.ANO_INGRESSO, 
		E.SEM_ENCERRAMENTO =  E.SEM_INGRESSO
FROM FTC_DATAMART..BI_EVASAO E
WHERE E.DT_ENCERRAMENTO = '1900-01-01'  OR E.ANO_ENCERRAMENTO = 1900
GO

-- 2. MOTIVO DE ENCERRAMENTO
--2.1 MOTIVO ABANDONO E ALUNO CANCELADO ALTERAR PARA ALUNO EVADIDO
UPDATE FTC_DATAMART..BI_EVASAO
	SET SITUACAO_ALUNO = 'Evadido'
WHERE MOTIVO_ENCERRAMENTO = 'ABANDONO' AND SITUACAO_ALUNO = 'Cancelado'
GO
--2.2 MOTIVO ABANDONO E ALUNO EVADIDO ALTERAR PARA EVASAO
UPDATE FTC_DATAMART..BI_EVASAO
	SET MOTIVO_ENCERRAMENTO = 'Evasao'
WHERE MOTIVO_ENCERRAMENTO = 'ABANDONO' AND SITUACAO_ALUNO = 'Evadido'
GO
--2.3 MOTIVO CANCELAMENTO OU TRANSFERENCIA E ALUNO EVADIDO ALTERAR PARA ALUNO CANCELADO
UPDATE FTC_DATAMART..BI_EVASAO
	SET SITUACAO_ALUNO = 'Cancelado'
WHERE MOTIVO_ENCERRAMENTO IN ('Cancelamento','Transferencia') AND SITUACAO_ALUNO = 'Evadido'
GO
--2.4 MOTIVO CONCLUSAO DEVE SER RETIRADO DA DIMENSAO
DELETE FROM FTC_DATAMART..BI_EVASAO WHERE MOTIVO_ENCERRAMENTO = 'CONCLUSAO'
GO

--2.5 UNIFICANDO CAUSAS_ENCERRAMENTO
UPDATE FTC_DATAMART..BI_EVASAO
	SET CAUSA_ENCERRAMENTO = 'OUTROS'
WHERE CAUSA_ENCERRAMENTO IN ('outos','outro','OUTRAS')
GO

UPDATE FTC_DATAMART..BI_EVASAO
	SET CAUSA_ENCERRAMENTO = 'NI'
WHERE CAUSA_ENCERRAMENTO IS NULL OR CAUSA_ENCERRAMENTO = ''
GO

--2.6 ALUNO COM MOTIVO_ENCERRAMENTO EVASAO O SITUACAO_ALUNO EVADIDO
UPDATE FTC_DATAMART..BI_EVASAO
	SET SITUACAO_ALUNO = 'Evadido'
WHERE MOTIVO_ENCERRAMENTO = 'Evasao' AND SITUACAO_ALUNO = 'Cancelado'
GO


--3 POPULANDO A PERIODO ENCERRAMENTO

UPDATE FTC_DATAMART..BI_EVASAO
	SET PERIODO_ENCERRAMENTO = CONCAT(ANO_ENCERRAMENTO,'/',SEM_ENCERRAMENTO)
GO

--## REMOVENDO CASOS RESTANTES E QUE NÃO DEVEM SER UTILIZADOS ##--

--1. CASOS DE DATA 1900
DELETE FROM FTC_DATAMART..BI_EVASAO 
where ano_encerramento = 1900


/*



select distinct count(aluno), CAUSA_ENCERRAMENTO from FTC_DATAMART..BI_EVASAO  WHERE SITUACAO_ALUNO = 'Cancelado' GROUP BY CAUSA_ENCERRAMENTO
select distinct SITUACAO_ALUNO from FTC_DATAMART..BI_EVASAO  where MOTIVO_ENCERRAMENTO = 'Evasao'

select count(*) from FTC_DATAMART..BI_EVASAO WHERE SITUACAO_ALUNO = 'Cancelado'
select causa_encerramento, count(ALUNO) from FTC_DATAMART..BI_EVASAO
group by causa_encerramento
order by 2 desc

SELECT DISTINCT SEM_ENCERRAMENTO FROM #TEMP_PERIODO_ENCERRAMENTO ORDER By 1

select COUNT(1) from LY_ALUNO where SIT_ALUNO = 'Evadido'

SELECT * FROM LY_HISTMATRICULA WHERE ALUNO = '011030006'

select * from LY_ALUNO a WHERE a.SIT_ALUNO = 'Evadido' and NOT exists (select top 1 1 from LY_H_CURSOS_CONCL where ALUNO = a.ALUNO)
select distinct CAUSA_ENCERR from LY_H_CURSOS_CONCL
select distinct MOTIVO from LY_H_CURSOS_CONCL where exists (select top 1 1 from LY_ALUNO a where a.ALUNO = aluno and SIT_ALUNO = 'Evadido')
select distinct a.ALUNO, a.SIT_ALUNO, hcc.motivo from LY_H_CURSOS_CONCL hcc
join ly_aluno a on a.aluno = hcc.aluno
where a.SIT_ALUNO = 'Evadido' and hcc.MOTIVO <> 'Evasao'

select distinct SIT_ALUNO from LY_ALUNO WHERE ALUNO = '011030006'

select ALUNO, SIT_ALUNO, from LY_ALUNO a WHERE a.SIT_ALUNO = 'Ativo' and exists (select top 1 1 from LY_H_CURSOS_CONCL hcc where hcc.ALUNO = a.ALUNO and DT_REABERTURA is null and hcc.MOTIVO <> 'Conclusao')

select * from LY_ALUNO WHERE ALUNO = '041050641'
select * from LY_H_CURSOS_CONCL WHERE ALUNO = '041050641'
select * from VW_MATRICULA_E_PRE_MATRICULA where ALUNO = '021040817'
select * from LY_HISTMATRICULA where ALUNO = '021040817' */
