USE LYCEUM
GO

ALTER PROCEDURE  DBO.PROC_FTC_JOB_ENTURMACAO
(
@ANO INT,
@SEMESTRE INT
)

AS 

BEGIN


DECLARE @ALUNO VARCHAR(20),
		@ALUNOATUAL VARCHAR(20),
		@CURSO VARCHAR(10),
		@UNIDADE_FISICA VARCHAR(10),
		@SERIE VARCHAR(10),
		@TURNO VARCHAR(10),
		@DISCIPLINA VARCHAR(20),
		@TIPODISC VARCHAR(20),
		@TURMA VARCHAR(20),
		@SUBTURMA1 VARCHAR(20),
		@SUBTURMA2 VARCHAR(20)

SET @ALUNOATUAL = NULL

declare DISCIPLINAS_ENTURMAR cursor fast_forward for   
select a.ALUNO,A.CURSO,A.UNIDADE_FISICA,A.SERIE,A.TURNO,PM.DISCIPLINA,D.TIPO FROM LY_PRE_MATRICULA PM
INNER JOIN LY_ALUNO A ON A.ALUNO = PM.ALUNO
INNER JOIN LY_DISCIPLINA D ON D.DISCIPLINA = PM.DISCIPLINA
WHERE ANO = @ANO AND SEMESTRE = @SEMESTRE AND TURMA IS NULL
AND A.ANO_INGRESSO = PM.ANO AND A.SEM_INGRESSO = PM.SEMESTRE
AND A.TIPO_INGRESSO IN ('Vestibular','Enem')
and PM.CONFIRMADA = 'S'
--AND A.ALUNO = '211030257'
-- AND ISNULL(LYCEUMINTEGRACAO.DBO.FN_FTC_ALUNO_PAGO(PM.ALUNO, LANC_DEB),0) = 1 
ORDER BY A.ALUNO,PM.DISCIPLINA

OPEN DISCIPLINAS_ENTURMAR            
FETCH NEXT FROM DISCIPLINAS_ENTURMAR INTO @ALUNO,@CURSO,@UNIDADE_FISICA,@SERIE,@TURNO,@DISCIPLINA,@TIPODISC
      
  -- Para cada item do cursor...            
  WHILE (@@FETCH_STATUS = 0)            
  BEGIN  
	SET @TURMA = NULL
	SET @SUBTURMA1 = NULL
	SET @SUBTURMA2 = NULL

	IF (@ALUNOATUAL IS NULL)
	BEGIN
		SET @ALUNOATUAL = @ALUNO
	END

	IF (@ALUNOATUAL != @ALUNO)
	BEGIN
		-- Verificamos se o aluno anterior terminou a rotina com alguma disciplina sem enturmação, se ocorrer, removemos todas as enturmações
		IF (EXISTS (SELECT 1 FROM LY_PRE_MATRICULA WHERE ALUNO = @ALUNOATUAL AND ANO = @ANO AND SEMESTRE = @SEMESTRE AND TURMA IS NULL))
		BEGIN
			UPDATE LY_PRE_MATRICULA SET TURMA = NULL,SUBTURMA1 = NULL,SUBTURMA2 = NULL WHERE ALUNO = @ALUNOATUAL AND ANO = @ANO AND SEMESTRE = @SEMESTRE;
		END

		SET @ALUNOATUAL = @ALUNO
	END


	IF (@TIPODISC IN ('TEORICA','PRATICA','EAD'))
	BEGIN
		SET @TURMA = (SELECT TOP 1 T.TURMA FROM LY_TURMA T
						INNER JOIN LY_DISCIPLINA D ON D.DISCIPLINA = T.DISCIPLINA AND D.TIPO = T.NIVEL
						WHERE T.ANO = @ANO AND T.SEMESTRE = @SEMESTRE AND T.DISCIPLINA = @DISCIPLINA AND T.FACULDADE = @UNIDADE_FISICA 
						AND (T.TURNO = @TURNO OR (@TURNO = 'I' AND T.TURNO IN ('M','V')))
						AND T.SIT_TURMA = 'ABERTA'
						and t.NUM_ALUNOS > ((SELECT count(1) FROM ly_matricula M WHERE M.DISCIPLINA = t.DISCIPLINA AND M.TURMA = t.TURMA AND M.ANO = t.ANO AND M.SEMESTRE = t.SEMESTRE AND M.SIT_MATRICULA != 'CANCELADO')  
								+ (SELECT count(1) FROM ly_pre_matricula M WHERE M.DISCIPLINA = t.DISCIPLINA AND M.TURMA = t.TURMA AND M.ANO = t.ANO AND M.SEMESTRE = t.SEMESTRE))  
						ORDER BY T.TURMA )

		IF (@TURMA IS NOT NULL)
		BEGIN
		
			UPDATE LY_PRE_MATRICULA SET
				TURMA = @TURMA
			WHERE ALUNO = @ALUNO
				AND ANO = @ANO
				AND SEMESTRE = @SEMESTRE
				AND DISCIPLINA = @DISCIPLINA

		END
	END

	/*IF (@TIPODISC IN ('TEOPRAEAD','TEOPRA','TEOEAD'))
	BEGIN
		SET @TURMA = (SELECT TOP 1 T.TURMA FROM LY_TURMA T
						INNER JOIN LY_DISCIPLINA D ON D.DISCIPLINA = T.DISCIPLINA AND D.TIPO = T.NIVEL
						WHERE T.ANO = @ANO AND T.SEMESTRE = @SEMESTRE AND T.DISCIPLINA = @DISCIPLINA AND T.FACULDADE = @UNIDADE_FISICA AND T.TURNO = @TURNO
						AND T.SIT_TURMA = 'ABERTA'
						and t.NUM_ALUNOS > ((SELECT count(1) FROM ly_matricula M WHERE M.DISCIPLINA = t.DISCIPLINA AND M.TURMA = t.TURMA AND M.ANO = t.ANO AND M.SEMESTRE = t.SEMESTRE AND M.SIT_MATRICULA != 'CANCELADO')  
								+ (SELECT count(1) FROM ly_pre_matricula M WHERE M.DISCIPLINA = t.DISCIPLINA AND M.TURMA = t.TURMA AND M.ANO = t.ANO AND M.SEMESTRE = t.SEMESTRE))  
						ORDER BY T.TURMA )

		IF (@TURMA IS NOT NULL)
		BEGIN
		
			UPDATE LY_PRE_MATRICULA SET
				TURMA = @TURMA
			WHERE ALUNO = @ALUNO
				AND ANO = @ANO
				AND SEMESTRE = @SEMESTRE
				AND DISCIPLINA = @DISCIPLINA

		END
	END*/

	FETCH NEXT FROM DISCIPLINAS_ENTURMAR INTO @ALUNO,@CURSO,@UNIDADE_FISICA,@SERIE,@TURNO,@DISCIPLINA,@TIPODISC
        
  END            
             
  -- Fecha o cursor  
  CLOSE DISCIPLINAS_ENTURMAR  
  DEALLOCATE DISCIPLINAS_ENTURMAR  

END