USE LYCEUM
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.FTC_SP_csvBolsasAluno'))
   exec('CREATE PROCEDURE [dbo].[FTC_SP_csvBolsasAluno] AS BEGIN SET NOCOUNT OFF; END')
GO 

ALTER PROCEDURE dbo.FTC_SP_csvBolsasAluno     
(      
  @P_FACULDADE VARCHAR(20)
, @P_TIPO_CURSO VARCHAR(20)  
, @P_CURSO  VARCHAR(20)  
, @P_TURNO  VARCHAR(20)  
, @P_CURRICULO VARCHAR(20)  
)      
AS      
-- [INÍCIO]              
BEGIN      
  
SET NOCOUNT ON  
  
  SELECT   
			  C.CURSO																	AS [CURSO],  
			  C.NOME																	AS [NOME_CURSO], 
			  A.CURRICULO																AS [CURRICULO], 
			  A.TURNO																	AS [TURNO],
			  A.SERIE																	AS [SERIE_ALUNO], 
			  C.FACULDADE																AS [UNIDADE_ENSINO_ALUNO], 
              UE.NOME_COMP																AS [NOME_UNIDADE_ENSINO_ALUNO], 
			  A.ANO_INGRESSO															AS [ANO_INGRESSO],
			  A.SEM_INGRESSO															AS [SEM_INGRESSO],
			  A.TIPO_INGRESSO															AS [TIPO_INGRESSO], 
			  A.ALUNO																	AS [ALUNO], 
			  PES.NOME_COMPL															AS [NOME_ALUNO],
              PES.CPF																	AS [CPF],
			  PES.RG_NUM																AS [RG], 
			  A.ANOCONCL_2G																AS [ANO_CONCLUSAO_2G], 
			  PES.E_MAIL																AS [E_MAIL],
			  PES.ENDERECO																AS [ENDERECO],
              PES.END_NUM																AS [NUMERO],
              PES.END_COMPL																AS [COMPLEMENTO],
              PES.CEP																	AS [CEP],
              HM.NOME																	AS [CIDADE],
              HM.UF																		AS [ESTADO],	
              PES.FONE																	AS [FONE], 
			  PES.CELULAR																AS [CELULAR], 
			  B.TIPO_BOLSA																AS [TIPO_BOLSA], 
			  TB.DESCRICAO																AS [NOME_BOLSA], 
			  B.PERC_VALOR																AS [PERC_VALOR], 
			  B.VALOR																	AS [VALOR_BOLSA], 
			  B.ANOINI																	AS [ANOINI_BOLSA], 
			  B.MESINI																	AS [MESINI_BOLSA], 
			  B.ANOFIM																	AS [ANOFIM_BOLSA], 
			  B.MESFIM																	AS [MESFIM_BOLSA], 
			  B.DATA_BOLSA																AS [DATA_BOLSA], 
			  --B.DATA_CANCEL															AS [DATA_CANCELAMENTO_BOLSA],
              --A.SIT_ALUNO																AS [SIT_ALUNO],
              ISNULL(CA.CONTRATO_ACEITO,'SEM CONTRATO')									AS [CONTRATO_ACEITO]
FROM LY_ALUNO A							
JOIN LY_PESSOA PES
    ON PES.PESSOA = A.PESSOA
JOIN LY_CURSO C							-- PARA SABER NOME DO CURSO E JOIN COM UNIDADE ENSINO
	ON A.CURSO = C.CURSO
JOIN LY_UNIDADE_ENSINO UE				-- PARA SABER NOME UNIDADE ENSINO
	ON C.FACULDADE = UE.UNIDADE_ENS
JOIN LY_BOLSA B
	ON A.ALUNO = B.ALUNO
JOIN LY_TIPO_BOLSA TB
	ON B.TIPO_BOLSA = TB.TIPO_BOLSA
JOIN HD_MUNICIPIO HM
	ON HM.MUNICIPIO = PES.END_MUNICIPIO
LEFT JOIN LY_CONTRATO_ALUNO CA 
	ON CA.ALUNO = B.ALUNO AND CA.ANO = B.ANOINI AND CA.PERIODO = (CASE WHEN B.MESINI BETWEEN 1 AND 6 THEN 1 ELSE 2 END)
WHERE C.ATIVO  = 'S' AND A.SIT_ALUNO = 'Ativo' AND B.DATA_CANCEL IS NULL AND (B.ANOFIM >= YEAR(GETDATE()) OR B.ANOFIM IS NULL) AND (B.MESFIM >= MONTH(GETDATE()) OR B.MESFIM IS NULL)
AND (@P_FACULDADE IS NOT NULL AND C.FACULDADE = @P_FACULDADE) 
AND (@P_TIPO_CURSO IS NOT NULL AND C.TIPO = @P_TIPO_CURSO)  
AND ((@P_CURSO IS NOT NULL AND C.CURSO = @P_CURSO) OR @P_CURSO IS NULL)
AND ((@P_TURNO IS NOT NULL AND A.TURNO = @P_TURNO) OR @P_TURNO IS NULL)  
AND ((@P_CURRICULO IS NOT NULL AND A.CURRICULO = @P_CURRICULO) OR @P_CURRICULO IS NULL)   
 
  
ORDER BY C.FACULDADE, UE.NOME_COMP, C.CURSO, C.NOME
  
  
SET NOCOUNT OFF  
  
END              
GO
-- [FIM]      



--##
--## PARAMETRIZAÇÃO/CADASTRO DA LISTA NO LYCEUM
--##

DECLARE @V_CONSULTA_DINAMICA INT
DECLARE @V_NOME_CONSULTA_DINAMICA varchar(100)

-- Colocar nome da lista (que será apresentada no combo)
set @V_NOME_CONSULTA_DINAMICA ='Custom - Lista de Alunos com Bolsas Ativas'

-- Consulta ID da Lista
SELECT @V_CONSULTA_DINAMICA = ID FROM LY_CONSULTA_DINAMICA WHERE TITULO = @V_NOME_CONSULTA_DINAMICA

-- armazena padrões de acesso
SELECT PADACES
INTO #TEMP_CONSULTA_DINAMICA
FROM LY_CONSULTA_DINAMICA_PADACES WHERE ID = @V_CONSULTA_DINAMICA


DELETE LY_CONSULTA_DINAMICA_PADACES WHERE ID_CONSULTA_DINAMICA = @V_CONSULTA_DINAMICA
DELETE LY_CONSULTA_DINAMICA_PARAMETROS WHERE ID_CONSULTA_DINAMICA = @V_CONSULTA_DINAMICA
DELETE LY_CONSULTA_DINAMICA WHERE ID = @V_CONSULTA_DINAMICA

BEGIN

IF NOT EXISTS(SELECT 1 FROM LY_CONSULTA_DINAMICA C WHERE C.TITULO = @V_NOME_CONSULTA_DINAMICA)
INSERT INTO LY_CONSULTA_DINAMICA(TITULO, TIPO, STORED_PROCEDURE)
VALUES(@V_NOME_CONSULTA_DINAMICA,'CSV','sp:FTC_SP_csvBolsasAluno(@P_FACULDADE@,@P_TIPO_CURSO@,@P_CURSO@,@P_TURNO@,@P_CURRICULO@)')

SET @V_CONSULTA_DINAMICA = @@IDENTITY

-- Insere padrões de acesso
INSERT INTO LY_CONSULTA_DINAMICA_PADACES (ID_CONSULTA_DINAMICA, PADACES)
SELECT @V_CONSULTA_DINAMICA, PADACES FROM #TEMP_CONSULTA_DINAMICA

-- Insere parametros

	--@p_ano				T_ANO,
	--@p_semestre			T_Semestre2,
	--@p_unidade_ensino	T_codigo,
	--@p_tipo_curso		T_codigo,
	--@p_curso			T_codigo,
	--@p_turno			T_codigo,
	--@p_curriculo		T_codigo,	
	--@p_sit_matricula	T_codigo,
	--@p_tem_turma		varchar(1)

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 3, 'P_FACULDADE', 5, 'Unidade Ensino', 'S', 'Select unidade_ens as codigo, nome_comp as descricao from ly_unidade_ensino order by unidade_ens', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 4, 'P_TIPO_CURSO', 5, 'Tipo de Curso', 'S', 'Select tipo as codigo, descricao from ly_tipo_curso order by tipo', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 5, 'P_CURSO', 5, 'Curso', 'N', 'Select Curso as codigo, nome as descricao from ly_curso where tipo = isnull(@p_tipo_curso@,tipo) and faculdade = (@p_faculdade@,faculdade) order by tipo', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 6, 'P_TURNO', 5, 'Turno', 'N', 'Select turno as codigo, descricao from ly_turno order by turno', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 7, 'P_CURRICULO', 5, 'Curriculo', 'N', 'Select Curriculo as CODIGO, (''Currículo: '' + convert(varchar,Curriculo)) AS DESCRICAO FROM LY_curriculo WHERE curso = ISNULL(@p_curso@,curso) AND turno = ISNULL(@p_turno@,turno) and dt_extincao is null ORDER BY curriculo', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

--SELECT * FROM LY_CONSULTA_DINAMICA WHERE ID = @V_CONSULTA_DINAMICA
--SELECT * FROM LY_CONSULTA_DINAMICA_PARAMETROS WHERE ID_CONSULTA_DINAMICA = @V_CONSULTA_DINAMICA

DROP TABLE  #TEMP_CONSULTA_DINAMICA

END
GO

delete from LY_CUSTOM_CLIENTE
where NOME = 'FTC_SP_csvBolsasAluno'
and IDENTIFICACAO_CODIGO = '0001'
go

INSERT INTO LY_CUSTOM_CLIENTE
(NOME, IDENTIFICACAO_CODIGO, AUTOR, DATA_CRIACAO, OBJETIVO, SOLICITADO_POR, ATIVO, TIPOCOMPONENTE, TIPO, CLIENTE)
SELECT
  'FTC_SP_csvBolsasAluno' NOME
, '0001' IDENTIFICAO_CODIGO
, 'Miguel' AUTOR
, '2017-01-20' DATA_CRIACAO
, 'ListaNG - Lista de Bolsas Ativas Cadastradas' OBJETIVO
, 'André Britto' SOLICITADO_POR
, 'S' ATIVO
, 'PROCEDURE' TIPOCOMPONENTE
, 'CLIENTE' TIPO
, 'FTC' CLIENTE
GO 