USE FTC_DATAMART
GO

--EXEC BI_EVASAO_CORRENTE_JOB 2020,1

IF NOT EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.BI_EVASAO_CORRENTE_JOB'))
   exec('CREATE PROCEDURE [dbo].[BI_EVASAO_CORRENTE_JOB] AS BEGIN SET NOCOUNT OFF; END')
GO 

ALTER PROCEDURE dbo.BI_EVASAO_CORRENTE_JOB
(            
  @p_ano VARCHAR(4)      
, @p_semestre VARCHAR(2)      

)            
AS            
-- [INÍCIO]                    
BEGIN

IF EXISTS (SELECT * FROM sys.tables WHERE type = 'U' AND OBJECT_ID = OBJECT_ID('dbo.BI_EVASAO_CORRENTE'))   
BEGIN
	DELETE FROM BI_EVASAO_CORRENTE WHERE ANO = @p_ano AND SEMESTRE = @p_semestre
END
ELSE
	CREATE TABLE BI_EVASAO_CORRENTE --DROP TABLE BI_EVASAO_CORRENTE
	(
		[ANO] VARCHAR(4),
		[SEMESTRE] VARCHAR(2),
		[STATUS_FTC] VARCHAR(50),
		[UNIDADE_ENSINO_ALUNO]	VARCHAR(20),
		[NOME_UNIDADE_ENSINO_ALUNO] VARCHAR(100),
		[UNIDADE_FISICA_ALUNO] VARCHAR(30),
		[TIPO_CURSO] VARCHAR(50),
		[CURSO] VARCHAR(20),
		[NOME_CURSO] VARCHAR(100),
		[CURRICULO] VARCHAR(20),
		[TURNO] VARCHAR(20),
		[SERIE] SMALLINT,
		[SERIE_CALCULADA] SMALLINT,
		[TIPO_ALUNO] VARCHAR(50),
		[TIPO_INGRESSO] VARCHAR(50),
		[ANO_INGRESSO] VARCHAR(4),
		[SEM_INGRESSO] VARCHAR(2),
		[ALUNO] VARCHAR(20),
		[CPF] VARCHAR(20),
		[NOME_ALUNO] VARCHAR(100),
		[E_MAIL] VARCHAR(100),
		[DDD] VARCHAR(10),
		[FONE] VARCHAR(30),
		[CELULAR] VARCHAR(30),
		[CEP] VARCHAR(10),
		[MUNICIPIO] VARCHAR(20),
		[SIT_MATRICULA] VARCHAR(50),
		[PAGO] SMALLINT,
		[NAO_PAGO] SMALLINT,
		[TIPO_FINAN] VARCHAR(50),
		[FINAN] VARCHAR(10),
		[DATA_PERIODO] VARCHAR(10),
		[INDICE_APROVEITAMENTO] DECIMAL(10,2),
		[QTD_INADIMP] INT,
		[PERC_FALTAS] DECIMAL(10,2),
		[DATA_MATRICULA] VARCHAR(10),
		[ANTECIP_FINAN] VARCHAR(1),
		[DT_ANTECIP] VARCHAR(10),
		[TIPO_ANTECIP] VARCHAR(20),
		[VALOR_ATENCIP] NUMERIC(20,2),
		[PERFIL_EVASAO] VARCHAR(30),
		[ULTIMA_MATRICULA] VARCHAR(6),
		[SOLICITOU_PLANO] VARCHAR(1),
		[SOLICITOU_HIST] VARCHAR(1),
		[TIPO_TRANSF] VARCHAR(50),
		[VALOR_MENSALIDADE] DECIMAL(10,2),
		[VALOR_SEMESTRALIDADE] DECIMAL(10,2),
		[DT_ENCERRAMENTO] VARCHAR(10),
		[BOLSISTA] VARCHAR(1),
		[MEDIA_PERC_BOLSA] DECIMAL(10,2),
		[QTD_SCORE_SERVICOS] INT,
		[SCORE_SERVICOS] DECIMAL(10,2),
		[QTD_SCORE_INADIMP] INT,
		[SCORE_INADIMP] DECIMAL(10,2),
		[QTD_SCORE_FALTAS] INT,
		[SCORE_FALTAS] DECIMAL(10,2),
		[QTD_SCORE_RENDIMENTO] INT,
		[SCORE_RENDIMENTO] DECIMAL(10,2),
		[RISCO_EVASAO] DECIMAL(10,2),
		[RISCO] VARCHAR(20),
		[RANGE_FALTAS] VARCHAR (30),
		[RANGE_APROVEITAMENTO] VARCHAR(30),
		[TEM_NOTA] VARCHAR(1),
		[DATA_PAGAMENTO] VARCHAR(10),
		[TIPO_PAGAMENTO] VARCHAR(50),
		[DATA_ULTIMO_LOGIN_BB] VARCHAR(10),
		[SEMANA_ULTIMO_LOGIN_BB] INT
	)

--1.0 INSERÇÃO DOS DADOS DE MATRICULADOS DO PERÍODO
	INSERT INTO BI_EVASAO_CORRENTE
	SELECT	ANO,
			SEMESTRE,
			STATUS_FTC,
			UNIDADE_ENSINO_ALUNO,
			NOME_UNIDADE_ENSINO_ALUNO,
			UNIDADE_FISICA_ALUNO,
			TIPO_CURSO,
			CURSO,
			NOME_CURSO,
			CURRICULO,
			TURNO,
			SERIE,
			SERIE_CALCULADA,
			TIPO_ALUNO,
			TIPO_INGRESSO,
			ANO_INGRESSO,
			SEM_INGRESSO,
			ALUNO,
			CPF,
			NOME_ALUNO,
			E_MAIL,
			DDD,
			FONE,
			CELULAR,
			CEP,
			MUNICIPIO,
			SIT_MATRICULA,
			PAGO,
			NAO_PAGO,
			TIPO_FINAN,
			FINAN,
			DATA_PERIODO,
			0.00 AS INDICE_APROVEITAMENTO,
			QTD_INADIMP,
			PERC_FALTAS,
			DATA_MATRICULA,
			ANTECIP_FINAN,
			DT_ANTECIP,
			TIPO_ANTECIP,
			VALOR_ATENCIP,
			PERFIL_EVASAO,
			ULTIMA_MATRICULA,
			SOLICITOU_PLANO,
			SOLICITOU_HIST,
			TIPO_TRANSF,
			VALOR_MENSALIDADE,
			VALOR_SEMESTRALIDADE,
			DT_ENCERRAMENTO,
			BOLSISTA,
			MEDIA_PERC_BOLSA,
			0 AS QTD_SCORE_SERVICOS,
			0.00 AS SCORE_SERVICOS,
			0 AS QTD_SCORE_INADIMP,
			0.00 AS SCORE_INADIMP,
			0 AS QTD_SCORE_FALTAS,
			0.00 AS SCORE_FALTAS,
			0 AS QTD_SCORE_RENDIMENTO,
			0.00 AS SCORE_RENDIMENTO,
			0.00 AS RISCO_EVASAO,
			'' AS RISCO,
			'' AS RANGE_FALTAS,
			'' AS RANGE_APROVEITAMENTO,
			'N' AS TEM_NOTA,
			DATA_PAGAMENTO,
			TIPO_PAGAMENTO,
			DATA_ULTIMO_LOGIN_BB,
			SEMANA_ULTIMO_LOGIN_BB
	FROM BI_REMATRICULA 
	WHERE ANO = @p_ano 
	AND SEMESTRE = @p_semestre
	AND STATUS_FTC IN ('MATRICULADO PAGO','PRE-MATRICULADO PAGO')

--2.0 SCORE SERVIÇOS
IF EXISTS (SELECT * FROM sys.tables WHERE type = 'U' AND OBJECT_ID = OBJECT_ID('dbo.TEMP_SERVICO'))   
BEGIN
	DROP TABLE TEMP_SERVICO 
END
CREATE TABLE TEMP_SERVICO (
	QTD_SOLICITACAO INT,
	ALUNO VARCHAR(20),
	SERVICO VARCHAR(20)
)

--2.1 CARREGANDO TODOS OS SERVICOS SOLICITADOS PELO ALUNO
INSERT INTO TEMP_SERVICO
SELECT DISTINCT  
 COUNT(SS.SOLICITACAO) QTD_SOLICITACAO
,SS.ALUNO
,ISS.SERVICO
FROM  LYCEUM..LY_SOLICITACAO_SERV SS
JOIN LYCEUM..LY_ITENS_SOLICIT_SERV ISS ON ISS.SOLICITACAO = SS.SOLICITACAO
JOIN LYCEUM..LY_TABELA_SERVICOS TS ON TS.SERVICO = ISS.SERVICO
JOIN BI_EVASAO_CORRENTE BI ON BI.ALUNO = SS.ALUNO
WHERE 1=1
AND SS.DATA >= CASE @p_semestre WHEN 1 THEN @p_ano+'-03-30' ELSE @p_ano+'-08-30' END
GROUP BY SS.ALUNO, ISS.SERVICO

--2.2 HISTORICO CHANCELADO: NOTA 4
UPDATE BI SET BI.QTD_SCORE_SERVICOS = BI.QTD_SCORE_SERVICOS + 4
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_HISESC1','AOL_HISESC2')

--2.3 PLANO DE DISCIPLINAS: NOTA 4
UPDATE BI SET BI.QTD_SCORE_SERVICOS = BI.QTD_SCORE_SERVICOS + 4
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_PLADISC1','AOL_PLADISC')

--2.4 LANCAMENTO DE NOTA NA CADERNETA 1 VEZ: NOTA 2 / +1 VEZ: NOTA 3 *NAO UTILZIADO*
--UPDATE BI SET  BI.SCORE_SERVICOS = CASE WHEN QTD_SOLICITACAO = 1 THEN SCORE_SERVICOS + 2.00 ELSE SCORE_SERVICOS + 3.00 END
--FROM BI_EVASAO_CORRENTE BI
--JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
--WHERE T.SERVICO IN ('IES_EXCDIS')

--2.5 RECISAO DE QUALQUER ESPECIE MENOS TRANCAMENTO: NOTA 5
UPDATE BI SET BI.QTD_SCORE_SERVICOS = BI.QTD_SCORE_SERVICOS + 5, BI.RISCO = '3.ALTO', BI.RISCO_EVASAO = 100.00
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_CANCM','AOL_CANCM_VET','AOL_CANCONV','AOL_CANCUNI','AOL_CANFOR','AOL_TRANSFEXT','AOL_TRANSFEXT_VET','EAD_TRANSEXTERNA','EAD_TRANSFEXTCUR','EAD_TRANSFEXTPOL')

--2.6 SEGUNDA CHAMADA 1 VEZ: NOTA 2 / +1 VEZ: NOTA 3
UPDATE BI SET BI.SCORE_SERVICOS = CASE WHEN QTD_SOLICITACAO = 1 THEN SCORE_SERVICOS + 2.00 ELSE SCORE_SERVICOS + 3.00 END
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_SEGCHA','AOL_SEGCHADIG','AOL_SEGCHAJ','EAD_SEGCHAJ')

--2.6 EXERCICIO DOMICILIAR 1 VEZ: NOTA 2 / +1 VEZ: NOTA 3
UPDATE BI SET BI.SCORE_SERVICOS = CASE WHEN QTD_SOLICITACAO = 1 THEN SCORE_SERVICOS + 2.00 ELSE SCORE_SERVICOS + 3.00 END
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_EXEDOM','EAD_EXEDOM')

--2.7 SOLICITACAO FINANCEIRA +1 VEZ: NOTA 3
UPDATE BI SET BI.QTD_SCORE_SERVICOS = BI.QTD_SCORE_SERVICOS + 3
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_DECFINPER','AOL_DECLFIN','AOL_SOLFIN','AOL_SUBRESOFIN')
AND T.QTD_SOLICITACAO > 1

--2.8 TRANCAMENTO DE MATRICULA: NOTA 4
UPDATE BI SET BI.QTD_SCORE_SERVICOS = BI.QTD_SCORE_SERVICOS + 3
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_SERVICO T ON T.ALUNO = BI.ALUNO
WHERE T.SERVICO IN ('AOL_TRANMAT','AOL_TRANMAT_VET','AOL_TRANMATMED','EAD_TRANMAT')

--2.9 NORMALIZANDO E ATRIBUINDO MEDIA SERVICOS

UPDATE BI SET BI.QTD_SCORE_SERVICOS = 5
FROM BI_EVASAO_CORRENTE BI
WHERE QTD_SCORE_SERVICOS > 5

UPDATE BI SET BI.SCORE_SERVICOS = QTD_SCORE_SERVICOS * 20
FROM BI_EVASAO_CORRENTE BI
WHERE QTD_SCORE_SERVICOS > 0

DROP TABLE TEMP_SERVICO

--3.0 QUANTIDADE DE MENSALIDADES ATRASADAS

UPDATE BI SET QTD_SCORE_INADIMP = (SELECT count(distinct CONCAT(c.ano, c.mes)) FROM LYCEUM..LY_COBRANCA C
JOIN LYCEUM..VW_COBRANCA VW ON VW.COBRANCA = C.COBRANCA
JOIN LYCEUM..LY_ITEM_LANC IL ON IL.COBRANCA = C.COBRANCA
JOIN LYCEUM..LY_LANC_DEBITO LD ON LD.LANC_DEB = IL.LANC_DEB
WHERE C.DATA_DE_VENCIMENTO < GETDATE() AND VW.VALOR > 50
--AND C.NUM_COBRANCA IN (1,5)
AND C.ESTORNO = 'N'
AND C.DT_ESTORNO IS NULL
AND C.ALUNO = BI.ALUNO
AND CONCAT(LD.ANO_REF,LD.PERIODO_REF) = CONCAT(BI.ANO,BI.SEMESTRE)
AND C.RESP <> 'FIES'
AND LD.CODIGO_LANC IN ('MS','MS_EB','SM'))
FROM BI_EVASAO_CORRENTE BI

--UPDATE EC SET EC.QTD_SCORE_INADIMP = EC.QTD_SCORE_INADIMP + 2
--FROM BI_EVASAO_CORRENTE EC
--WHERE EXISTS (	
--				SELECT TOP 1 1 
--				FROM BI_REMATRICULA BI 
--				WHERE BI.ALUNO = EC.ALUNO 
--				AND BI.ANO = CASE @p_semestre WHEN '1' THEN BI.ANO-1 WHEN '2' THEN BI.ANO WHEN '11' THEN BI.ANO-1 WHEN '22' THEN BI.ANO ELSE BI.ANO END
--				AND BI.SEMESTRE = CASE @p_semestre WHEN '1' THEN '2' ELSE '1' END
--				AND BI.TIPO_FINAN IN ('FIES','PROUNI PARCIAL','PROUNI INTEGRAL', 'PROIES', 'FIES+PROUNI')
--			 )
--AND EC.TIPO_FINAN = 'PAGANTES'

UPDATE EC SET EC.QTD_INADIMP = EC.QTD_SCORE_INADIMP
FROM BI_EVASAO_CORRENTE EC

UPDATE EC SET EC.QTD_SCORE_INADIMP = 5
FROM BI_EVASAO_CORRENTE EC
WHERE EC.QTD_SCORE_INADIMP > 5

UPDATE EC SET EC.SCORE_INADIMP = EC.QTD_SCORE_INADIMP * 20
FROM BI_EVASAO_CORRENTE EC

--4.0 FALTAS
IF EXISTS (SELECT * FROM sys.tables WHERE type = 'U' AND OBJECT_ID = OBJECT_ID('dbo.TEMP_FALTAS'))   
BEGIN
	DROP TABLE TEMP_FALTAS
END

CREATE TABLE TEMP_FALTAS (
		ALUNO VARCHAR(20),
		DISCIPLINA VARCHAR(20),
		TURMA VARCHAR(30),
		ANO VARCHAR(4),
		SEMESTRE VARCHAR(2),
		TOTAL_AULAS DECIMAL(10,2),
		TOTAL_FALTAS DECIMAL(10,2)
	)

	INSERT INTO TEMP_FALTAS
	SELECT VW.ALUNO, VW.DISCIPLINA, VW.TURMA, VW.ANO, VW.SEMESTRE,0.00,0.00
	FROM LYCEUM..VW_MATRICULA_E_PRE_MATRICULA VW 
	JOIN BI_EVASAO_CORRENTE BI ON BI.ALUNO = VW.ALUNO AND BI.ANO = VW.ANO AND BI.SEMESTRE = VW.SEMESTRE
	WHERE VW.SIT_MATRICULA IN ('Matriculado','Aprovado','Rep Nota','Rep Freq')
	AND EXISTS (SELECT TOP 1 1 FROM LYCEUM..LY_LISTA_FREQ 
	)

	UPDATE T SET T.TOTAL_AULAS = (
								  SELECT COUNT(*) FROM LYCEUM..LY_AGENDA A 
								  WHERE A.DISCIPLINA = T.DISCIPLINA 
								  AND A.TURMA = T.TURMA 
								  AND A.ANO = T.ANO 
								  AND A.SEMESTRE = T.SEMESTRE
								 -- AND MONTH(A.DATA) <= MONTH(GETDATE())
								  )
	FROM TEMP_FALTAS T
	
	UPDATE T SET T.TOTAL_FALTAS = (	
									SELECT CONVERT(DECIMAL(10,2),COUNT(*))
									FROM LYCEUM..LY_COMP_LISTA A 
									JOIN LYCEUM..LY_LISTA_FREQ LF ON LF.LISTA = A.LISTA
									WHERE A.DISCIPLINA = T.DISCIPLINA 
									AND A.TURMA = T.TURMA 
									AND A.ANO = T.ANO 
									AND A.SEMESTRE = T.SEMESTRE 
									AND A.ALUNO = T.ALUNO 
									AND A.OCORRENCIA = 'Falta'
									--AND MONTH(LF.DT_AULA) <= MONTH(GETDATE()) 
									)
	FROM TEMP_FALTAS T

	UPDATE T SET T.TOTAL_FALTAS = 0 FROM TEMP_FALTAS T WHERE T.TOTAL_FALTAS IS NULL

	CREATE TABLE TEMP_AVG_FALTAS (
		ALUNO VARCHAR(20),
		ANO VARCHAR(4),
		SEMESTRE VARCHAR(2),
		PERC_FALTAS DECIMAL(10,2)
	)

	INSERT INTO TEMP_AVG_FALTAS
	SELECT	ALUNO, @p_ano, @p_semestre, 0.00
	FROM TEMP_FALTAS
	
	UPDATE TAF SET TAF.PERC_FALTAS = (SELECT AVG(T.TOTAL_FALTAS)/AVG(T.TOTAL_AULAS) FROM TEMP_FALTAS T WHERE T.ALUNO = TAF.ALUNO AND T.ANO = @p_ano AND T.SEMESTRE = @p_semestre AND T.TOTAL_AULAS > 0)
	FROM TEMP_AVG_FALTAS TAF
	
	UPDATE TAF SET TAF.PERC_FALTAS = 0.00
	FROM TEMP_AVG_FALTAS TAF
	WHERE TAF.PERC_FALTAS IS NULL
		
	UPDATE BI SET BI.QTD_SCORE_FALTAS = CASE 
											WHEN TAF.PERC_FALTAS  BETWEEN 0.00 AND 0.05 THEN 1
											WHEN TAF.PERC_FALTAS  BETWEEN 0.06 AND 0.1 THEN 2
											WHEN TAF.PERC_FALTAS  BETWEEN 0.11 AND 0.15 THEN 3
											WHEN TAF.PERC_FALTAS  BETWEEN 0.16 AND 0.2 THEN 4
											ELSE 5
										 END
	FROM BI_EVASAO_CORRENTE BI
	JOIN TEMP_AVG_FALTAS TAF ON TAF.ALUNO = BI.ALUNO AND TAF.ANO = BI.ANO AND TAF.SEMESTRE = BI.SEMESTRE
	
	UPDATE BI SET BI.RANGE_FALTAS = CASE 
											WHEN BI.QTD_SCORE_FALTAS  = 1 THEN '0 A 5'
											WHEN BI.QTD_SCORE_FALTAS  = 2 THEN '05 A 10'
											WHEN BI.QTD_SCORE_FALTAS  = 3 THEN '10 A 15'
											WHEN BI.QTD_SCORE_FALTAS  = 4 THEN '15 A 20'
											ELSE 'ACIMA DE 20'
										 END
	FROM BI_EVASAO_CORRENTE BI

	--UPDATE EC SET EC.QTD_SCORE_FALTAS = EC.QTD_SCORE_FALTAS + 1
	--FROM BI_EVASAO_CORRENTE EC
	--WHERE EXISTS (	
	--				SELECT TOP 1 1 
	--				FROM BI_REMATRICULA BI 
	--				WHERE BI.ALUNO = EC.ALUNO 
	--				AND BI.ANO = CASE @p_semestre WHEN '1' THEN BI.ANO-1 WHEN '2' THEN BI.ANO WHEN '11' THEN BI.ANO-1 WHEN '22' THEN BI.ANO ELSE BI.ANO END
	--				AND BI.SEMESTRE = CASE @p_semestre WHEN '1' THEN '2' ELSE '1' END
	--				AND BI.TIPO_FINAN IN ('FIES','PROUNI PARCIAL','PROUNI INTEGRAL', 'PROIES', 'FIES+PROUNI')
	--			 )
	--AND EC.TIPO_FINAN = 'PAGANTES'


	--UPDATE EC SET EC.QTD_SCORE_FALTAS = EC.QTD_SCORE_FALTAS + 1
	--FROM BI_EVASAO_CORRENTE EC
	--WHERE (	
	--		SELECT COUNT(*) 
	--		FROM LYCEUM..VW_MATRICULA_E_PRE_MATRICULA VW 
	--		WHERE VW.ALUNO = EC.ALUNO 
	--		AND VW.ANO = EC.ANO 
	--		AND VW.SEMESTRE = EC.SEMESTRE
	--	  ) <= 3
	
	
	UPDATE EC SET EC.QTD_SCORE_FALTAS = 5
	FROM BI_EVASAO_CORRENTE EC
	WHERE EC.QTD_SCORE_FALTAS > 5

	UPDATE EC SET EC.QTD_SCORE_FALTAS = 0
	FROM BI_EVASAO_CORRENTE EC
	WHERE EC.QTD_SCORE_FALTAS IS NULL

	UPDATE BI SET BI.SCORE_FALTAS = BI.QTD_SCORE_FALTAS * 20
	FROM BI_EVASAO_CORRENTE BI

	UPDATE BI SET BI.PERC_FALTAS = T.PERC_FALTAS
	FROM BI_EVASAO_CORRENTE BI
	JOIN TEMP_AVG_FALTAS T ON T.ALUNO = BI.ALUNO AND T.ANO = BI.ANO AND T.SEMESTRE = BI.SEMESTRE
		
	DROP TABLE TEMP_AVG_FALTAS

	DROP TABLE TEMP_FALTAS


--5.0 RENDIMENTO ACADEMICO


CREATE TABLE TEMP_RENDIMENTO
(
	ALUNO VARCHAR(20),
	ANO VARCHAR(4),
	SEMESTRE VARCHAR(2),
	INDICE_GLOBAL NUMERIC(10,2),
	INDICE_ATUAL NUMERIC(10,2),
	VARIACAO DECIMAL(10,2)
)


INSERT INTO TEMP_RENDIMENTO
SELECT EC.ALUNO, EC.ANO, EC.SEMESTRE, 0.00 AS INDICE_GLOBAL, 0.00 AS INDICE_ATUAL, 0.00 AS VARIACAO 
FROM BI_EVASAO_CORRENTE EC 
WHERE ANO = @p_ano
AND SEMESTRE = @p_semestre

UPDATE T SET T.INDICE_GLOBAL = IA.VALOR
FROM TEMP_RENDIMENTO T
JOIN LYCEUM..LY_INDICE_ALUNO IA ON IA.ALUNO = T.ALUNO
WHERE IA.INDICE = 'GLOBAL'


CREATE TABLE TEMP_INDICE_ATUAL
(
	ALUNO VARCHAR(20),
	ANO VARCHAR(4),
	SEMESTRE VARCHAR(2),
	INDICE_ATUAL NUMERIC(10,2),
	SOMA_NOTA NUMERIC(10,2),
	SOMA_PROVA NUMERIC(10,2)
)

INSERT INTO TEMP_INDICE_ATUAL
SELECT N.ALUNO, N.ANO, N.SEMESTRE,  0.00 AS INDICE_ATUAL, SUM(CONVERT(NUMERIC(10,2),LTRIM(RTRIM(N.CONCEITO)))) AS SOMA_NOTA, SUM(CONVERT(NUMERIC(10,2),LTRIM(RTRIM(P.NOTA_MAX)))) AS SOMA_PROVA
FROM LYCEUM..LY_NOTA N
JOIN LYCEUM..LY_PROVA P ON P.PROVA = N.PROVA AND N.ANO = P.ANO AND N.SEMESTRE = P.SEMESTRE AND P.DISCIPLINA = N.DISCIPLINA AND P.TURMA = N.TURMA
JOIN TEMP_RENDIMENTO T ON T.ALUNO = N.ALUNO AND T.ANO = N.ANO AND T.SEMESTRE = N.SEMESTRE
WHERE N.CONCEITO <> '' AND P.NOTA_MAX <> ''
GROUP BY N.ALUNO, N.ANO, N.SEMESTRE


UPDATE TEMP_INDICE_ATUAL SET INDICE_ATUAL = SOMA_NOTA/SOMA_PROVA*100

UPDATE T SET T.INDICE_ATUAL = T1.INDICE_ATUAL
FROM TEMP_RENDIMENTO T
JOIN TEMP_INDICE_ATUAL T1 ON T1.ALUNO = T.ALUNO AND T1.ANO = T.ANO AND T.SEMESTRE = T1.SEMESTRE

UPDATE T SET T.VARIACAO = (T.INDICE_ATUAL/T.INDICE_GLOBAL)-1
FROM TEMP_RENDIMENTO T
WHERE T.INDICE_GLOBAL > 0.00
 
UPDATE BI SET BI.QTD_SCORE_RENDIMENTO = CASE 
										WHEN R.VARIACAO BETWEEN -1.00 AND -0.51		THEN 5
										WHEN R.VARIACAO BETWEEN -00.50 AND -00.41	THEN 4
										WHEN R.VARIACAO BETWEEN -00.40 AND -00.31	THEN 3
										WHEN R.VARIACAO BETWEEN -00.30 AND -00.21	THEN 2
										WHEN R.VARIACAO BETWEEN -00.20 AND -00.10	THEN 1
										ELSE 0 
									END
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_RENDIMENTO R ON R.ALUNO = BI.ALUNO AND R.ANO = BI.ANO AND R.SEMESTRE = BI.SEMESTRE
WHERE R.INDICE_GLOBAL > 0.00 AND R.INDICE_ATUAL > 0.00

--UPDATE BI SET BI.QTD_SCORE_RENDIMENTO = QTD_SCORE_RENDIMENTO+1
--FROM BI_EVASAO_CORRENTE BI
--WHERE	(SELECT COUNT(*) 
--		FROM LYCEUM..VW_MATRICULA_E_PRE_MATRICULA 
--		WHERE ALUNO = BI.ALUNO 
--		AND ANO = BI.ANO 
--		AND SEMESTRE = BI.SEMESTRE)  < 4

UPDATE BI SET BI.QTD_SCORE_RENDIMENTO = 5
FROM BI_EVASAO_CORRENTE BI
WHERE BI.QTD_SCORE_RENDIMENTO >= 5

UPDATE BI SET BI.INDICE_APROVEITAMENTO = T.INDICE_ATUAL
FROM BI_EVASAO_CORRENTE BI
JOIN TEMP_RENDIMENTO T ON T.ALUNO = BI.ALUNO AND T.ANO = BI.ANO AND T.SEMESTRE = BI.SEMESTRE

UPDATE BI SET BI.SCORE_RENDIMENTO = BI.QTD_SCORE_RENDIMENTO * 20
FROM BI_EVASAO_CORRENTE BI

UPDATE BI SET BI.RANGE_APROVEITAMENTO = CASE 
											WHEN BI.INDICE_APROVEITAMENTO  BETWEEN 0.00 AND 39.99 THEN '0,0 A 3,9'
											WHEN BI.INDICE_APROVEITAMENTO  BETWEEN 30.00 AND 69.99 THEN '4,0 A 6,9'
											ELSE '7,0 OU MAIS'
										END
FROM BI_EVASAO_CORRENTE BI

UPDATE BI SET TEM_NOTA = 'S'
FROM BI_EVASAO_CORRENTE BI
WHERE EXISTS (SELECT TOP 1 1 FROM LYCEUM..LY_NOTA N
				WHERE N.ANO = @p_ano AND N.SEMESTRE = @p_semestre
				AND N.ALUNO = BI.ALUNO)

DROP TABLE TEMP_INDICE_ATUAL
DROP TABLE TEMP_RENDIMENTO

--6.0 CALCULO RISCO EVASÃO

UPDATE BI SET BI.RISCO_EVASAO = (BI.SCORE_FALTAS+BI.SCORE_INADIMP+BI.SCORE_RENDIMENTO+BI.SCORE_SERVICOS)/4
FROM BI_EVASAO_CORRENTE BI
WHERE BI.RISCO_EVASAO < 100.00

UPDATE BI SET BI.RISCO_EVASAO = 100.00
FROM BI_EVASAO_CORRENTE BI
WHERE BI.SCORE_FALTAS = 100.00 OR  BI.SCORE_INADIMP = 100.00 OR BI.SCORE_RENDIMENTO = 100.00 OR BI.SCORE_SERVICOS = 100.00


--6.1 RISCO

UPDATE BI SET BI.RISCO = CASE 
							WHEN BI.RISCO_EVASAO BETWEEN 0 AND 29.99 THEN '1.BAIXO'
							WHEN BI.RISCO_EVASAO BETWEEN 30.00 AND 69.99 THEN '2.MEDIO'
							ELSE '3.ALTO'
						 END
FROM BI_EVASAO_CORRENTE BI
WHERE BI.RISCO IS NULL OR BI.RISCO = ''

/*UPDATE BI_EVASAO_CORRENTE SET RISCO = 'MEDIO' WHERE UNIDADE_ENSINO_ALUNO IN ('29','06')*/
/*UPDATE BI_EVASAO_CORRENTE SET RISCO = 'ALTO' WHERE UNIDADE_ENSINO_ALUNO IN ('05','07')*/
/*UPDATE BI_EVASAO_CORRENTE SET RISCO = 'ALTO' WHERE CURSO IN ('722','2060','354')*/
/*UPDATE BI_EVASAO_CORRENTE SET RISCO_EVASAO = '75.00' WHERE RISCO = 'ALTO'*/
/*UPDATE BI_EVASAO_CORRENTE SET RISCO_EVASAO = '50.00' WHERE RISCO = 'MEDIO'*/


-- [FIM]
END