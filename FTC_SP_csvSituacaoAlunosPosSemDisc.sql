USE LYCEUM
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('dbo.FTC_SP_csvSitAlunosPosSimplificada'))
   exec('CREATE PROCEDURE [dbo].[FTC_SP_csvSitAlunosPosSimplificada] AS BEGIN SET NOCOUNT OFF; END')
GO 

	
 ALTER PROCEDURE dbo.FTC_SP_csvSitAlunosPosSimplificada       
(        
  @P_ANO_INGRESSO VARCHAR(4)  
, @P_SEM_INGRESSO VARCHAR(2)    
, @P_FACULDADE VARCHAR(20)  
, @P_TIPO_CURSO VARCHAR(20)    
, @P_CURSO  VARCHAR(20)    
, @P_TURNO  VARCHAR(20)    
, @P_CURRICULO VARCHAR(20)  
)        
AS        
-- [INÍCIO]                
BEGIN        
    
SET NOCOUNT ON    
    SELECT  DISTINCT   
     PM.ANO								AS [ANO],  
     PM.SEMESTRE						AS [SEMETRE],  
     C.FACULDADE						AS [UNIDADE_ENSINO_ALUNO],   
     UE.NOME_COMP			            AS [NOME_UNIDADE_ENSINO_ALUNO],
     C.TIPO								AS [TIPO],  
     C.CURSO							AS [CURSO],    
     C.NOME								AS [NOME_CURSO],   
     A.CURRICULO						AS [CURRICULO],   
     A.TURNO							AS [TURNO],  
     A.ANO_INGRESSO						AS [ANO_INGRESSO],  
     A.SEM_INGRESSO						AS [SEM_INGRESSO],  
     A.TIPO_INGRESSO					AS [TIPO_INGRESSO],  
     ISNULL(CONVERT(VARCHAR(10),A.DT_INGRESSO,103),'')       AS [DATA_INGRESSO],  
     ISNULL(A.TURMA_PREF,'')            AS [TURMA_PREF],   
     A.ALUNO							AS [ALUNO],   
     PES.NOME_COMPL						AS [NOME_ALUNO],  
     PES.CPF							AS [CPF],  
     PES.RG_NUM							AS [RG],   
     PES.E_MAIL							AS [E_MAIL],  
     PES.ENDERECO						AS [ENDERECO],  
     PES.END_NUM						AS [NUMERO],  
     ISNULL(PES.END_COMPL,'')			AS [COMPLEMENTO],  
     PES.CEP							AS [CEP],  
     PES.BAIRRO							AS [BAIRRO],
     HM.NOME							AS [CIDADE],  
     HM.UF								AS [ESTADO],   
     PES.FONE							AS [FONE],   
     PES.CELULAR						AS [CELULAR], 
     A.SIT_ALUNO						AS [SIT_ALUNO], 
     ISNULL(PM.SIT_MATRICULA,'Ingressado')          AS [SIT_MATRICULA],   
     ISNULL((SELECT TOP 1 'S'   
     FROM LY_ITEM_LANC IL
     JOIN LY_LANC_DEBITO LD  
      ON IL.LANC_DEB = LD.LANC_DEB   
     JOIN VW_COBRANCA C  
      ON IL.COBRANCA = C.COBRANCA
     JOIN LY_COBRANCA CC
	  ON CC.COBRANCA = C.COBRANCA  
     LEFT JOIN LY_ITEM_CRED IC   
      ON IC.COBRANCA = C.COBRANCA  
    WHERE LD.ALUNO = PM.ALUNO
    AND C.VALOR <= 1  
    AND LD.CODIGO_LANC IN ('MS','ACORDO')
    AND CC.ESTORNO = 'N'
    GROUP BY IL.COBRANCA
    HAVING MAX(IL.PARCELA) = 1 ),'N')              AS [PAGO],  
      ISNULL((SELECT TOP 1 CONVERT(VARCHAR(10),IC.DATA,103)  
     FROM LY_ITEM_LANC IL
     JOIN LY_LANC_DEBITO LD  
      ON IL.LANC_DEB = LD.LANC_DEB   
     JOIN VW_COBRANCA C  
      ON IL.COBRANCA = C.COBRANCA
     JOIN LY_COBRANCA CC
	  ON CC.COBRANCA = C.COBRANCA  
     LEFT JOIN LY_ITEM_CRED IC   
      ON IC.COBRANCA = C.COBRANCA  
    WHERE LD.ALUNO = PM.ALUNO
    AND C.VALOR <= 1  
    AND LD.CODIGO_LANC IN ('MS','ACORDO')
    AND CC.ESTORNO = 'N'
    AND IL.PARCELA = 1
    ),'')             AS [DATA_PAGAMENTO]
FROM LY_ALUNO A         
LEFT JOIN (SELECT ANO, SEMESTRE, DISCIPLINA, TURMA, ALUNO, SIT_MATRICULA, LANC_DEB, DT_ULTALT , SERIE_CALCULO, COBRANCA_SEP, SIT_DETALHE, GRUPO_ELETIVA , DT_INSERCAO, 'S' AS CONFIRMADA  
FROM VW_MATRICULA_E_PRE_MATRICULA  
UNION  
SELECT ANO, SEMESTRE, DISCIPLINA, TURMA, ALUNO, 'Historico' AS SIT_MATRICULA, LANC_DEB, DT_ULTALT, SERIE AS SERIE_CALCULO, COBRANCA_SEP, SIT_DETALHE, GRUPO_ELETIVA, DT_MATRICULA AS DT_INSERCAO, 'S' CONFIRMADA  
FROM LY_HISTMATRICULA  
) PM ON PM.ALUNO = A.ALUNO  
JOIN LY_PESSOA PES  
    ON PES.PESSOA = A.PESSOA  
JOIN LY_CURSO C       -- PARA SABER NOME DO CURSO E JOIN COM UNIDADE ENSINO  
 ON A.CURSO = C.CURSO  
JOIN LY_UNIDADE_ENSINO UE    -- PARA SABER NOME UNIDADE ENSINO  
 ON C.FACULDADE = UE.UNIDADE_ENS  
JOIN HD_MUNICIPIO HM  
 ON HM.MUNICIPIO = PES.END_MUNICIPIO  
WHERE 1=1 AND A.SIT_ALUNO = 'Ativo' AND C.TIPO IN ('POS-GRADUACAO','EXTENSAO')
AND ((@P_ANO_INGRESSO IS NOT NULL AND A.ANO_INGRESSO = @P_ANO_INGRESSO) OR @P_ANO_INGRESSO IS NULL)  
AND ((@P_SEM_INGRESSO IS NOT NULL AND A.SEM_INGRESSO = @P_SEM_INGRESSO) OR @P_SEM_INGRESSO IS NULL)  
AND ((@P_FACULDADE IS NOT NULL AND C.FACULDADE = @P_FACULDADE) OR @P_FACULDADE IS NULL)   
AND ((@P_TIPO_CURSO IS NOT NULL AND C.TIPO = @P_TIPO_CURSO) OR @P_TIPO_CURSO IS NULL)    
AND ((@P_CURSO IS NOT NULL AND C.CURSO = @P_CURSO) OR @P_CURSO IS NULL)  
AND ((@P_TURNO IS NOT NULL AND A.TURNO = @P_TURNO) OR @P_TURNO IS NULL)    
AND ((@P_CURRICULO IS NOT NULL AND A.CURRICULO = @P_CURRICULO) OR @P_CURRICULO IS NULL)  
   
  
ORDER BY C.FACULDADE, UE.NOME_COMP, C.CURSO, C.NOME  
    
    
SET NOCOUNT OFF    
    
END
GO              

-- [FIM]      


--##
--## PARAMETRIZAÇÃO/CADASTRO DA LISTA NO LYCEUM
--##

DECLARE @V_CONSULTA_DINAMICA INT
DECLARE @V_NOME_CONSULTA_DINAMICA varchar(200)

-- Colocar nome da lista (que será apresentada no combo)
set @V_NOME_CONSULTA_DINAMICA = 'Custom - Situação Alunos - Pós-Graduação'

-- Consulta ID da Lista
SELECT @V_CONSULTA_DINAMICA = ID FROM LY_CONSULTA_DINAMICA WHERE TITULO = @V_NOME_CONSULTA_DINAMICA

-- armazena padrões de acesso
SELECT PADACES
INTO #TEMP_CONSULTA_DINAMICA
FROM LY_CONSULTA_DINAMICA_PADACES WHERE ID = @V_CONSULTA_DINAMICA


DELETE LY_CONSULTA_DINAMICA_PADACES WHERE ID_CONSULTA_DINAMICA = @V_CONSULTA_DINAMICA
DELETE LY_CONSULTA_DINAMICA_PARAMETROS WHERE ID_CONSULTA_DINAMICA = @V_CONSULTA_DINAMICA
DELETE LY_CONSULTA_DINAMICA WHERE ID = @V_CONSULTA_DINAMICA

BEGIN

IF NOT EXISTS(SELECT 1 FROM LY_CONSULTA_DINAMICA C WHERE C.TITULO = @V_NOME_CONSULTA_DINAMICA)
INSERT INTO LY_CONSULTA_DINAMICA(TITULO, TIPO, STORED_PROCEDURE)
VALUES(@V_NOME_CONSULTA_DINAMICA,'CSV','sp:FTC_SP_csvSitAlunosPosSimplificada(@P_ANO_INGRESSO@,@P_SEM_INGRESSO@,@P_FACULDADE@,@P_TIPO_CURSO@,@P_CURSO@,@P_TURNO@,@P_CURRICULO@)')

SET @V_CONSULTA_DINAMICA = @@IDENTITY

-- Insere padrões de acesso
INSERT INTO LY_CONSULTA_DINAMICA_PADACES (ID_CONSULTA_DINAMICA, PADACES)
SELECT @V_CONSULTA_DINAMICA, PADACES FROM #TEMP_CONSULTA_DINAMICA

-- Insere parametros

	--@p_ano				T_ANO,
	--@p_semestre			T_Semestre2,
	--@p_unidade_ensino	T_codigo,
	--@p_tipo_curso		T_codigo,
	--@p_curso			T_codigo,
	--@p_turno			T_codigo,
	--@p_curriculo		T_codigo,	
	--@p_sit_matricula	T_codigo,
	--@p_tem_turma		varchar(1)

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 1, 'P_ANO_INGRESSO', 5, 'Ano de Ingresso', 'N', 'SELECT DISTINCT ANO AS CODIGO, (''ANO: '' + convert(varchar,ANO)) AS DESCRICAO FROM LY_PERIODO_LETIVO ORDER BY ANO DESC', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 2, 'P_SEM_INGRESSO', 5, 'Semestre de Ingresso', 'N', 'SELECT DISTINCT PERIODO AS CODIGO, (''PERÍODO: '' + convert(varchar,PERIODO)) AS DESCRICAO FROM LY_PERIODO_LETIVO WHERE ANO = ISNULL(@p_ano@,ANO) ORDER BY PERIODO', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 3, 'P_FACULDADE', 5, 'Unidade Ensino', 'N', 'Select unidade_ens as codigo, nome_comp as descricao from ly_unidade_ensino order by unidade_ens', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 4, 'P_TIPO_CURSO', 5, 'Tipo de Curso', 'N', 'Select tipo as codigo, descricao from ly_tipo_curso where tipo in (''EXTENSAO'',''POS-GRADUACAO'') order by tipo', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 5, 'P_CURSO', 5, 'Curso', 'N', 'Select Curso as codigo, nome as descricao from ly_curso where tipo = isnull(@p_tipo_curso@,tipo) and faculdade = (@p_faculdade@,faculdade) order by tipo', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 6, 'P_TURNO', 5, 'Turno', 'N', 'Select turno as codigo, descricao from ly_turno order by turno', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

INSERT INTO LY_CONSULTA_DINAMICA_PARAMETROS(ID_CONSULTA_DINAMICA,ORDEM,PARAMETRO,TIPO,DESCRICAO,OBRIGATORIO,SQL_TEXTO,COL_VALOR,COL_DESCR)
SELECT @V_CONSULTA_DINAMICA, 7, 'P_CURRICULO', 5, 'Curriculo', 'N', 'Select Curriculo as CODIGO, (''Currículo: '' + convert(varchar,Curriculo)) AS DESCRICAO FROM LY_curriculo WHERE curso = ISNULL(@p_curso@,curso) AND turno = ISNULL(@p_turno@,turno) and dt_extincao is null ORDER BY curriculo', 'CODIGO' COL_VALOR, 'DESCRICAO' COL_DESCR

--SELECT * FROM LY_CONSULTA_DINAMICA WHERE ID = @V_CONSULTA_DINAMICA
--SELECT * FROM LY_CONSULTA_DINAMICA_PARAMETROS WHERE ID_CONSULTA_DINAMICA = @V_CONSULTA_DINAMICA

drop table  #TEMP_CONSULTA_DINAMICA

END
GO


delete from LY_CUSTOM_CLIENTE
where NOME = 'FTC_SP_csvSitAlunosPosSimplificada'
and IDENTIFICACAO_CODIGO = '0001'
go

INSERT INTO LY_CUSTOM_CLIENTE
(NOME, IDENTIFICACAO_CODIGO, AUTOR, DATA_CRIACAO, OBJETIVO, SOLICITADO_POR, ATIVO, TIPOCOMPONENTE, TIPO, CLIENTE)
SELECT
  'FTC_SP_csvSitAlunosPosSimplificada' NOME
, '0001' IDENTIFICAO_CODIGO
, 'Miguel' AUTOR
, '2017-04-18' DATA_CRIACAO
, 'ListaNG - Situação Alunos Simplificada - Pós Graduação' OBJETIVO
, 'André Britto, Reinaldo Borba' SOLICITADO_POR
, 'S' ATIVO
, 'PROCEDURE' TIPOCOMPONENTE
, 'CLIENTE' TIPO
, 'FTC' CLIENTE
GO   